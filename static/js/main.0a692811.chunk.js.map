{"version":3,"sources":["utils/Colors.ts","components/Button.tsx","components/Checkbox.tsx","components/DateInput.tsx","components/RadioButton.tsx","components/RangeSlider.tsx","components/TextArea.tsx","components/TextInput.tsx","components/Tooltip.tsx","App.js","reportWebVitals.js","index.js"],"names":["getBackgroundColorClasses","color","getButtonColorClasses","disabled","getBorderColorClasses","getCheckboxColorClasses","coloredBorder","retVal","getAccentColorClasses","Button","props","className","otherProps","onClick","children","Checkbox","type","DateInput","selectedDateString","onChange","required","buttonProps","popperModifiers","name","options","padding","popper","width","customInput","CalendarIcon","selected","moment","toDate","d","format","RadioButton","RangeSlider","trackColor","TextArea","accentColor","TextInput","Tooltip","text","position","offset","useState","style","setStyle","childRef","useRef","tooltipRef","useEffect","current","parentRect","tooltipRect","y","height","translate","calculateStyle","getBoundingClientRect","ref","App","React","date","setDate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a692811.chunk.js","sourcesContent":["export type Color = \"primary\" | \"warning\" | \"danger\" | \"success\";\n\nexport const getBackgroundColorClasses = (color: Color) => {\n  switch (color) {\n    case \"primary\":\n      return \"bg-blue-500\";\n    case \"warning\":\n      return \"bg-yellow-500\";\n    case \"danger\":\n      return \"bg-red-500\";\n    case \"success\":\n      return \"bg-green-500\";\n  }\n};\n\nexport const getButtonColorClasses = (\n  color: Color,\n  disabled?: boolean\n): string => {\n  switch (color) {\n    case \"primary\":\n      return (\n        getBackgroundColorClasses(color) +\n        \" border-blue-500 \" +\n        (disabled\n          ? \"\"\n          : \"hover:bg-blue-600 focus:border-blue-600 hover:border-blue-600\")\n      );\n    case \"warning\":\n      return (\n        getBackgroundColorClasses(color) +\n        \" border-yellow-500 \" +\n        (disabled\n          ? \"\"\n          : \"hover:bg-yellow-600 focus:border-yellow-600 hover:border-yellow-600\")\n      );\n    case \"danger\":\n      return (\n        getBackgroundColorClasses(color) +\n        \" border-red-500 \" +\n        (disabled ? \"\" : \"hover:bg-red-600 focus:border-red-600 hover:border-red-600\")\n      );\n    case \"success\":\n      return (\n        getBackgroundColorClasses(color) +\n        \" hover:bg-green-600 focus:border-green-600 border-green-500 hover:border-green-600\"\n      );\n  }\n};\n\nexport const getBorderColorClasses = (color: Color): string => {\n  switch (color) {\n    case \"primary\":\n      return \"border-blue-500 hover:border-blue-600\";\n    case \"warning\":\n      return \"border-yellow-500 hover:border-yellow-600\";\n    case \"danger\":\n      return \"border-red-500 hover:border-red-600\";\n    case \"success\":\n      return \"border-green-500 hover:border-green-600\";\n  }\n};\n\nexport const getCheckboxColorClasses = (\n  color: Color,\n  coloredBorder: boolean = false,\n  disabled: boolean = false\n): string => {\n  let retVal = disabled\n    ? \"\"\n    : (coloredBorder\n        ? getBorderColorClasses(color)\n        : \"border-gray-500 hover:border-gray-600\") + \" cursor-pointer \";\n  switch (color) {\n    case \"primary\":\n      return retVal + \" radio-primary text-blue-500 hover:text-blue-600\";\n    case \"warning\":\n      return retVal + \" radio-warning text-yellow-500 hover:text-yellow-600\";\n    case \"danger\":\n      return retVal + \" radio-danger text-red-500 hover:text-red-600\";\n    case \"success\":\n      return retVal + \" radio-success text-green-500 hover:text-green-600\";\n  }\n};\n\nexport const getAccentColorClasses = (color: Color) => {\n  switch (color) {\n    case \"primary\":\n      return \"input-accent-primary focus:border-blue-600\";\n    case \"warning\":\n      return \"input-accent-warning focus:border-yellow-600\";\n    case \"danger\":\n      return \"input-accent-danger focus:border-red-600\";\n    case \"success\":\n      return \"input-accent-success focus:border-green-600\";\n  }\n};\n","import React from \"react\";\nimport { Color, getButtonColorClasses } from \"../utils\";\n\ninterface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  color?: Color;\n}\n\nexport const Button = (props: React.PropsWithChildren<Props>) => {\n  const { color = \"primary\", className = \"\", disabled, ...otherProps } = props;\n\n  return (\n    <button\n      disabled={props.disabled}\n      onClick={props.onClick}\n      className={\n        `button flex justify-center m-0 inline-block \n        items-center overflow-visible rounded border \n        border-solid px-3 py-2 text-center align-middle \n        text-xs font-normal normal-case leading-relaxed \n        text-white shadow-sm focus:outline-none \n        focus:ring-2 focus:ring-offset-2\n       ` +\n        \" \" +\n        className +\n        \" \" +\n        getButtonColorClasses(color, disabled)\n      }\n      {...otherProps}\n    >\n      {props.children}\n    </button>\n  );\n};\n","import React from \"react\";\nimport { Color, getCheckboxColorClasses } from \"../utils\";\n\ninterface CheckboxProps\n  extends Omit<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    \"type\" | \"className\"\n  > {\n  color: Color;\n  coloredBorder?: boolean;\n}\n\nexport const Checkbox = (props: CheckboxProps) => {\n  const { color, coloredBorder, disabled, ...otherProps } = props;\n\n  //input[type=\"checkbox\"] is overridden in index.css\n  return (\n    <input\n      className={\n        \"h-4 w-4 focus:ring-transparent border-2 rounded \" +\n        getCheckboxColorClasses(color, coloredBorder, disabled)\n      }\n      disabled={disabled}\n      type=\"checkbox\"\n      {...otherProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { CalendarIcon } from \"@heroicons/react/24/solid\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport { Color, getButtonColorClasses } from \"../utils\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ninterface Props\n  extends Omit<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    \"disabled\" | \"onChange\" | \"required\" | \"onClick\" | \"type\"\n  > {\n  color?: Color;\n  disabled?: boolean;\n  required?: boolean;\n  onChange?: (ds: string) => void;\n  selectedDateString?: string /** The date selected by the picker in string format */;\n}\n\nexport const DateInput = (props: Props) => {\n  const {\n    color = \"primary\",\n    disabled,\n    selectedDateString,\n    onChange,\n    required = false,\n    className = \"\",\n    ...buttonProps\n  } = props;\n\n  return (\n    <DatePicker\n      popperModifiers={[\n        {\n          name: \"arrow\",\n          options: {\n            padding: ({ popper }: any) => popper.width / 2\n          }\n        }\n      ]}\n      customInput={\n        <button\n          type=\"button\"\n          className={\n            `button flex justify-center m-0 inline-block \n            items-center overflow-visible rounded border \n            border-solid px-3 py-2 text-center align-middle \n            text-xs font-normal normal-case leading-relaxed \n            text-white shadow-sm focus:outline-none \n            focus:ring-2 focus:ring-offset-2\n           ` +\n            \" \" +\n            className +\n            \" \" +\n            getButtonColorClasses(color, disabled)\n          }\n          {...buttonProps}\n        >\n          {selectedDateString ? null : <CalendarIcon className=\"h-5 pr-2\" />}\n          {selectedDateString || \"Select Date\"}\n        </button>\n      }\n      required={required}\n      disabled={disabled}\n      selected={moment(selectedDateString).toDate()}\n      onChange={(d: Date) => {\n        if (onChange) {\n          onChange(moment(d).format(\"MM/DD/YYYY\"));\n        }\n      }}\n    />\n  );\n};\n","import { Color, getCheckboxColorClasses } from \"../utils\";\nimport React from 'react';\n\ninterface RadioProps\n  extends Omit<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    \"type\" | \"className\"\n  > {\n  coloredBorder?: boolean;\n  color: Color;\n}\n\nexport const RadioButton = (props: RadioProps) => {\n  const { color, coloredBorder, disabled, ...otherProps } = props;\n\n  //input[type=\"radio\"] is overridden in index.css\n  return (\n    <input\n      className={\n        \"h-5 w-5 border-2 focus:ring-transparent \" +\n        getCheckboxColorClasses(color, coloredBorder, disabled)\n      }\n      disabled={disabled}\n      type=\"radio\"\n      {...otherProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Color, getBackgroundColorClasses } from \"../utils\";\n\ninterface RangeProps\n  extends Omit<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    \"type\" | \"className\" | \"size\"\n  > {\n  trackColor?: Color;\n}\n\nexport const RangeSlider = (props: RangeProps) => {\n  const { trackColor, ...otherProps } = props;\n\n  // there are browser specific styles that need to be overridden to make this component\n  // consistent across browsers, so the 'primary-slider' class is used in index.css.\n\n  return (\n    <input\n      type=\"range\"\n      className={\n        (trackColor ? getBackgroundColorClasses(trackColor) : \"bg-gray-400\") +\n        \" \" +\n        \"primary-slider h-1 cursor-pointer rounded-lg input-accent-primary appearance-none\" // just in case the css overrides don't work, we include the correct accent color\n      }\n      {...otherProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Color, getAccentColorClasses } from \"../utils\";\n\ninterface Props\n  extends Omit<React.InputHTMLAttributes<HTMLTextAreaElement>, \"className\"> {\n  accentColor: Color;\n}\n\nexport const TextArea = (props: Props) => {\n  const { accentColor, ...otherProps } = props;\n\n  return (\n    <textarea\n      className={\n        \"block p-2 w-full rounded-lg border border-gray-500 bg-gray-100 p-2.5 text-sm \" +\n        getAccentColorClasses(accentColor)\n      }\n      {...otherProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Color, getAccentColorClasses } from \"../utils\";\n\ninterface Props\n  extends Omit<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    \"type\" | \"className\"\n  > {\n  accentColor: Color;\n}\n\nexport const TextInput = (props: Props) => {\n  const { accentColor, ...otherProps } = props;\n\n  return (\n    <input\n      type=\"text\"\n      className={\n        \"block p-2 w-full rounded-lg border border-gray-500 bg-gray-100 p-2.5 text-sm \" +\n        getAccentColorClasses(accentColor)\n      }\n      {...otherProps}\n    />\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\n\ntype Props = {\n  text: string;\n  position?: \"top\" | \"bottom\";\n  offset?: number;\n  children: React.ReactNode;\n};\n\ntype AbsoluteStyle = {\n  translate: string;\n};\n\nexport const calculateStyle = (\n  parentRect: DOMRect,\n  tooltipRect: DOMRect,\n  offset: number,\n  position?: \"top\" | \"bottom\"\n): AbsoluteStyle => {\n  // the tooltip will start off even with the bottom of the parent\n  // the default state is to treat it like we need to place it above the element\n  let y = offset;\n\n  if (position) {\n    if (position === \"top\") {\n      y = -(parentRect.height * 2) - offset;\n    }\n  } else if (tooltipRect.y < 0) {\n    // no position is set, but the default position is above the element, place it below\n    y = tooltipRect.height + offset;\n  }\n\n  return {\n    translate: `${parentRect.width / 2 - tooltipRect.width / 2}px ${y}px`\n  };\n};\n\nexport const Tooltip = (props: Props) => {\n  const { children, text, position = \"top\", offset = 8 } = props;\n  const [style, setStyle] = useState<AbsoluteStyle>();\n\n  const childRef = useRef() as React.MutableRefObject<HTMLDivElement>;\n  const tooltipRef = useRef() as React.MutableRefObject<HTMLDivElement>;\n\n  useEffect(() => {\n    if (childRef.current && tooltipRef.current) {\n      setStyle(\n        calculateStyle(\n          childRef.current.getBoundingClientRect(),\n          tooltipRef.current.getBoundingClientRect(),\n          offset,\n          position\n        )\n      );\n    }\n  }, [offset, position]);\n\n  //the tooltip classes used here are defined in index.css, and would normally be replaced by group-hover classes\n  return (\n    <div className=\"inline-block cursor-default\">\n      <div className=\"tooltip-wrapper\" ref={childRef}>\n        {children}\n      </div>\n      <div\n        className=\"tooltip absolute z-50 mb-10 -translate-y-full rounded bg-black\"\n        ref={tooltipRef}\n        style={style}\n      >\n        <div className=\"relative max-w-xs break-words p-3 text-center text-xs text-white\">\n          {text}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import {\n  Button,\n  Checkbox,\n  DateInput,\n  RadioButton,\n  RangeSlider,\n  TextArea,\n  TextInput,\n  Tooltip\n} from \"./components\";\nimport React from \"react\";\n\nconst App = () => {\n  const [date, setDate] = React.useState();\n\n  return (\n    <div className=\"p-3\">\n      <h1 className=\"pb-3\">Examples of components with Tailwind styling</h1>\n      <hr className=\"pb-3\" />\n      <p className=\"pb-3\">Buttons</p>\n      <div className=\"flex flex-row gap-x-3\">\n        <Button color=\"primary\">Primary</Button>\n        <Button color=\"warning\">Warning</Button>\n        <Button color=\"danger\">Warning</Button>\n        <Button color=\"success\">Success</Button>\n        <Button disabled>Disabled</Button>\n      </div>\n      <br />\n      <hr className=\"pb-3\" />\n      <p className=\"pb-3\">Tooltip</p>\n      <div className=\"flex flex-row gap-x-3\">\n        <Tooltip text=\"Example of tooltip text\" position=\"top\">\n          <Button>Tooltip Above Button</Button>\n        </Tooltip>\n      </div>\n      <br />\n      <hr className=\"pb-3\" />\n      <p className=\"pb-3\">Radio Buttons</p>\n      <div className=\"flex flex-row gap-x-3\">\n        <RadioButton color=\"primary\" coloredBorder />\n        <RadioButton color=\"warning\" />\n        <RadioButton color=\"danger\" />\n        <RadioButton color=\"success\" coloredBorder />\n        <RadioButton color=\"primary disabled\" coloredBorder />\n      </div>\n      <br />\n      <hr className=\"pb-3\" />\n      <p className=\"pb-3\">Check Boxes</p>\n      <div className=\"flex flex-row gap-x-5\">\n        <div>\n          <h4>Primary Checkbox</h4>\n          <Checkbox color=\"primary\" />\n        </div>\n        <div>\n          <h4>Warning Checkbox</h4>\n          <Checkbox color=\"warning\" />\n        </div>\n        <div>\n          <h4>Colored Border (Danger)</h4>\n          <Checkbox color=\"danger\" coloredBorder />\n        </div>\n        <div>\n          <h4>Disabled</h4>\n          <Checkbox color=\"danger\" disabled />\n        </div>\n      </div>\n      <br />\n      <hr className=\"pb-3\" />\n      <p className=\"pb-3\">Range Slider</p>\n      <div className=\"flex flex-row gap-x-5\">\n        <div>\n          <h4>Default</h4>\n          <RangeSlider />\n        </div>\n        <div>\n          <h4>Colored Track</h4>\n          <RangeSlider trackColor=\"primary\" />\n        </div>\n        <div>\n          <h4>Disabled</h4>\n          <RangeSlider trackColor=\"primary\" disabled />\n        </div>\n      </div>\n      <br />\n      <hr className=\"pb-3\" />\n      <p className=\"pb-3\">Text Input</p>\n      <div className=\"flex flex-row gap-x-5\">\n        <div>\n          <h4>Text Input</h4>\n          <TextInput accentColor=\"primary\" />\n        </div>\n        <div>\n          <h4>Text Area (Warning)</h4>\n          <TextArea accentColor=\"warning\" />\n        </div>\n        <div>\n          <h4>Disabled</h4>\n          <TextInput accentColor=\"primary\" disabled />\n        </div>\n      </div>\n      <br />\n\n      <hr className=\"pb-3\" />\n      <p className=\"pb-3\">Date Input</p>\n      <div className=\"w-full\">\n        <DateInput selectedDateString={date} onChange={d => setDate(d)} />\n      </div>\n      <br />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./main.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}